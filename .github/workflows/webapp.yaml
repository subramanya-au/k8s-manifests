#this workflow is to deploy in all the environments
name: web-app-release
on:
  workflow_call:
    secrets:
      docker_username: 
        required: true
      docker_password: 
        required: true

jobs:
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: webapp
      BRANCH_TO_TAG_WITH_LATEST: main
    outputs:
      docker_image: ${{ steps.image_sha.outputs.docker_image }}

    steps:
      - name: Check out my other private repo
        uses: actions/checkout@v4
        with:
          repository: subramanya-au/webapp
          ref: main
        #   token: ${{ secrets.MY_PAT }}

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}


      - name: Docker Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            sunil0019/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', env.BRANCH_TO_TAG_WITH_LATEST) }}
            type=ref,event=branch
          labels:
            git-author-name=${{ github.event.head_commit.author.name }}
            git-author-email=${{ github.event.head_commit.author.email }}
            build-dir=${{ github.workspace }}/images/webapp
            build-origin=git-actions

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Set SHA Image for k8s Deployment Pinning
        id: image_sha
        run: echo "docker_image=sunil0019/${{ env.IMAGE_NAME }}:sha-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
  
#   deploy-dev:   
#     name: Deploy-to-Dev
#     runs-on: actions-sandbox-runner 
#     needs: 
#       - docker-build
#     environment: 
#       name: dev
#     timeout-minutes: 60
#     if: ${{ github.ref == 'refs/heads/main' }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
      
#       - name: ArgoCD Deployment
#         run: |
#           #Argocd Login
#           argocd login --insecure ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --grpc-web

#           #Argocd repo add
#           argocd repo add https://github.com/subramanya-au/k8s-manifests.git --username ${{ secrets.GIT_USERNAME }} --password ${{ secrets.GIT_TOKEN }} --insecure-skip-server-verification --grpc-web --upsert
      
#           #Argocd app create
#           argocd app create webapp -f webapp/environments/sandbox/application.yaml --upsert
          
#           #Set Image
#           argocd app set webapp --kustomize-image ${{ needs.docker-build.outputs.docker_image }}
  